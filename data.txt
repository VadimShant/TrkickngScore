  const sheetId = "1DPzHNeUjTGCLCFC1vB9wD4YaJnWLxlF4ayZtO0QH460";
    const apiKey = "AIzaSyCdWNc0szsmhtpSzWpF7JZ3ZsddOq1Xvj4"; 
    const range = "DB!A2:B300"


let trickPoints = {};
let trickNames = [];
let baseTotal = 0;

async function loadTricks() {
  const res = await fetch(`https://sheets.googleapis.com/v4/spreadsheets/${sheetId}/values/${range}?key=${apiKey}`);
  const data = await res.json();

  if (!data.values) {
    alert("Ошибка загрузки трюков из таблицы");
    return;
  }

  data.values.forEach(([name, score]) => {
    if (!name || !score) return;
    const trick = name.trim().toLowerCase();
    trickPoints[trick] = parseFloat(score);
    trickNames.push(trick);
  });
}

function updateScore() {
  const input = document.getElementById("trickInput").value;
  const tricks = input.split(",").map(t => t.trim().toLowerCase());
  let total = 0;

  tricks.forEach(trick => {
    if (trickPoints[trick] != null) {
      total += trickPoints[trick];
    }
  });

  baseTotal = total;
  
  
  const execution = parseFloat(document.getElementById("myRange").value);
  const finalScore = (baseTotal * execution).toFixed(2);

  document.getElementById("score").textContent = `${finalScore}`;
  document.getElementById("demo").textContent = execution.toFixed(2); // отобразить значение слайдера

  congratulate(finalScore)

  const fire = document.querySelector(".fire-background");
  if (total >= 20) {
    let intensity = Math.min((total - 20) / 80, 1);
    fire.style.opacity = intensity;
    fire.style.transform = `translate(-50%, -50%) scale(${1 + intensity * 0.5})`;
  } else {
    fire.style.opacity = 0;
  }
}

function autoResize(textarea) {
  textarea.style.height = "auto";
  textarea.style.height = textarea.scrollHeight + "px";

}

function handleInput() {
  const inputEl = document.getElementById("trickInput");
  const value = inputEl.value;
  const lastTerm = value.split(",").pop().trim().toLowerCase();
  const box = document.getElementById("suggestions");

  if (!lastTerm || lastTerm.length < 1) {
    box.style.display = "none";
    return;
  }

  const matches = trickNames.filter(name => name.startsWith(lastTerm)).slice(0, 10);
  box.innerHTML = "";

  if (matches.length === 0) {
    box.style.display = "none";
    return;
  }

  matches.forEach(match => {
    const div = document.createElement("div");
    div.className = "autocomplete-item";
    div.textContent = match;
    div.onclick = () => {
      const parts = value.split(",");
      parts[parts.length - 1] = ` ${match}`;
      inputEl.value = parts.join(",").trim() + ", ";
      box.style.display = "none";
      updateScore();
    };
    box.appendChild(div);
  });

  const rect = inputEl.getBoundingClientRect();
  box.style.top = rect.bottom + window.scrollY + "px";
  box.style.left = rect.left + window.scrollX + "px";
  box.style.width = rect.width + "px";
  box.style.display = "block";

  updateScore();
}

function handleKey(e) {
  const box = document.getElementById("suggestions");
  if (e.key === "Escape") box.style.display = "none";
}

window.addEventListener("DOMContentLoaded", () => {
  loadTricks();
  document.querySelectorAll("textarea").forEach(autoResize);
  updateScore(); // при загрузке сразу посчитать
});

// Настройка слайдера
document.addEventListener("DOMContentLoaded", () => {
  const slider = document.getElementById("myRange");
  slider.addEventListener("input", () => {
    updateScore(); // пересчёт при изменении слайдера
  });
});


function congratulate(score) {
  const fire = document.getElementById("fire");
  if (score < 50) {
    fire.style.opacity = 0; // скрыть огонь при низком счёте
    return;
  } else if (score >= 50 && score < 100) {
    fire.style.opacity = 0.3; // слабый огонь при среднем счёте
   // показать огонь при высоком счёте  
  } else if (score >= 100 && score < 200) {
    fire.style.opacity = 0.9; // средний огонь при высоком сч
  }
    let maxOpacity = 0.8;
  let opacity = Math.min(score / 300, 1) * maxOpacity;
  fire.style.opacity = opacity;
}
function showSupport() {
  const el = document.querySelector('.support-card');
  if (!el) {
    console.error("Support card not found");
    return;
  }
  // если скрыто или явно не задано — показываем, иначе скрываем
  if (el.style.display === "none" || getComputedStyle(el).display === "none") {
    el.style.display = "block";
  } else {
    el.style.display = "none";
  }
}








    <!-- Support Block -->
<div class="support-card">
  <h2>Your support</h2>
  <p></p>

  <!-- PayPal Donate -->
  <div class="support-item">
    <div class="label">PayPal</div>
    <form action="https://www.paypal.com/donate/?hosted_button_id=YVU83Y9Y7A792" method="post" target="_blank" class="inline-form">
      <!-- Заменить hosted_button_id на свой, сгенерированный в PayPal -->
      <input type="hidden" name="hosted_button_id" value="YOUR_BUTTON_ID"/>
      <button type="submit" class="btn">
        <img src="https://www.paypalobjects.com/en_US/i/btn/btn_donate_SM.gif" alt="Donate with PayPal">
        
      </button>
    </form>
  </div>

  <!-- USDT Wallet -->
  <div class="support-item">
    <div class="label">USDT</div>
    <div class="wallet-box">
      <div>Chain: TRC20 </div>
      <div class="address">TK7Wxtjoc6r9ea6cqa7AVMiCiu35T8V4ze</div>
      <!-- Можно подставить QR, если сгенерируешь изображение и положишь рядом -->
      <!-- Пример: <img src="path/to/your-usdt-qr.png" alt="USDT QR" class="qr"> -->
    </div>
  </div>

  <!-- Контакты -->
  <div class="support-item">
    <div class="label">contacts</div>
    <div class="contacts">
      <a href="https://www.instagram.com/twisttwix/" target="_blank">IG: @twisttwix</a><br>
      <a href="mailto:lophineorganic@gmail.com">Email: lophineorganic</a>
    </div>
  </div>
</div>
  <section class="about-chaos">
  <h2 class="about-title">About Tricking Score (Demo)</h2>
  <p class="about-subtitle">
    Welcome to <span>Tricking Score</span> — a project that makes tricking more fun and engaging for everyone.
  </p>




@media (min-width: 100px) and (max-width: 1000px) {
  
.calculateconsole {
  width: 100%;
  height: 150px;
}

h2 {
  font-size: 10px;
}

pre {
    width: 99%;
    height: 90%;
    
    padding: 5px;
    font-size: 10px;
}

h2::after {
    content: "";
    display: block;
    width: 60px;
    height: 1px;
    background: linear-gradient(90deg, #00fbff6c, transparent);
    margin-top: 0px;
}

.panel {
    padding: 10px;
      box-shadow: 0 0 1px rgba(0, 200, 255, 0.5);
}

.wrapper {
  width: 100%;
  min-height: auto;
  height: fit-content;
}

.about-section {
  padding: 5% 2%;
}

.about-how {
    padding: 5% 1%;
}

.slider {

    height: 2px;
}

.SmartCalcul {

    font-size: 15px;
}

.space {
    padding: 10px 5px;
    background: #000000;
}
h1 {

    font-size: 40px;
}

textarea {
    height: fit-content;
    font-size: 15px;
}

label[for="executionKnob"] {
    font-size: 10px;
}

.total-box span
 {
    font-size: 30px;
  }

  .total-box {
    font-size: 15px;
  }

.autocomplete-box {

    font-size: 15px;
}

.fire {
    height: 75px;
}

body {
    padding-top: 50px;
}


.LogServiceTab {
    min-height: 300px;
        margin-top: 0px;
}

.about-section__title {

    font-size: 20px;
    margin-top: 10px;
}

.about-section__title::after {

    width: 55px;
    height: 1px;
    margin-top: 0px;
    border-radius: 3px;
    background: linear-gradient(90deg, var(--edge), var(--edge2));
    box-shadow: 0 0 18px rgba(112, 215, 255, .6);
}

.about-card__h {
    font-size: 13px;
}

.about-card__meta {

    font-size: 10px;
}

.about-how {

    margin-top: 0px;
}

.about-how__title {

    font-size: 20px;
    padding: 0px 3px;

}

.about-how__title::after {

    width: 33px;
    height: 1px;
    margin-top: 0px;
    border-radius: 3px;
}

.how-card__h
 {
    font-size: 13px;
    font-weight: 700;
}

ul li {
     margin-bottom: 0px; 
}

.how-card__meta
 {

    font-size: 10px;

}

.card-inner {

    height: 200px;
}

.donate-info {
    font-size: 10px;

}

a {

    font-size: 10px;
}

.disput-title {

    font-size: 25px;
}

.disput-title::after {
    height: 2px;
    margin: 0px auto 0;
    border-radius: 1px;
}

.disput-buttons {

    gap: 40px;

}

.disput-section {
    padding-top: 50px;
    padding-bottom: 70px;
}

}